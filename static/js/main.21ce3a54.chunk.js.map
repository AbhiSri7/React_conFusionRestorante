{"version":3,"sources":["components/LoadingComponent.js","shared/baseUrl.js","components/HomeComponent.js","components/MenuComponent.js","components/ContactComponent.js","components/AboutComponent.js","components/DishdetailComponent.js","components/HeaderComponent.js","components/FooterComponent.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponent.js","redux/dishes.js","redux/comments.js","redux/promotions.js","redux/leaders.js","redux/forms.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["Loading","className","baseUrl","RenderCard","item","isLoading","errMess","in","transformProps","exitTransform","Card","CardImg","src","image","alt","name","CardBody","CardTitle","designation","CardSubtitle","CardText","description","Home","props","dish","dishesLoading","dishesErrMess","promotion","promosLoading","promosErrMess","leader","leadersLoading","leadersErrMess","RenderMenuItem","onClick","to","id","width","CardImgOverlay","Menu","menu","dishes","map","key","Breadcrumb","BreadcrumbItem","active","required","val","length","maxLength","len","minLength","isNumber","isNaN","Number","validEmail","test","Contact","handleSubmit","bind","values","this","postFeedback","resetFeedbackForm","href","role","model","onSubmit","Row","Label","htmlFor","md","Col","text","placeholder","validators","show","messages","size","offset","checkbox","select","textarea","rows","Button","type","color","Component","RenderLeader","ldr","Media","left","object","body","heading","About","leaders","RenderLeaders","list","CardHeader","title","CommentForm","state","isModalOpen","toggleModal","setState","postComment","dishId","rating","comment","value","Modal","isOpen","toggle","ModalHeader","ModalBody","RenderComments","comments","cmnts","author","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","RenderDish","DishDetail","Header","isNavOpen","toggleNav","handleLogin","event","alert","username","password","remember","checked","preventDefault","Navbar","dark","expand","NavbarToggler","NavbarBrand","height","Collapse","navbar","Nav","NavItem","outline","Jumbotron","Form","FormGroup","Input","innerRef","input","check","Footer","dishesFailed","errmess","payload","addDishes","commentsFailed","addComments","promosFailed","addPromos","promos","dispatch","leadersFailed","addLeaders","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","TransitionGroup","CSSTransition","location","classNames","timeout","path","component","filter","featured","promotions","promo","exact","match","parseInt","params","commentsErrMess","withRouter","connect","newComment","toISOString","fetch","method","JSON","stringify","headers","credentials","then","response","ok","error","Error","status","statusText","json","addComment","catch","console","log","message","actions","reset","feedback","newFeedback","Object","assign","Dishes","action","Comments","concat","Promotions","Leaders","InitialFeedback","firstname","lastname","telnum","email","agree","contactType","store","createStore","combineReducers","createForms","applyMiddleware","thunk","logger","App","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.21ce3a54.chunk.js","sourcesContent":["import React from 'react';\n\nexport const Loading = () => {\n    return(\n        <div className=\"col-12\">\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\n            <p>Loading . . .</p>\n        </div>\n    );\n};","export const baseUrl = 'http://localhost:3001/';","import React from 'react';\nimport { Card, CardImg, CardText, CardBody, CardTitle, CardSubtitle} from 'reactstrap';\nimport { Loading } from './LoadingComponent';\nimport { baseUrl } from '../shared/baseUrl';\nimport { FadeTransform } from 'react-animation-components';\n\nfunction RenderCard({item, isLoading, errMess}) {\n\n    if (isLoading) {\n        return(\n            <Loading />\n        );\n    }\n    else if (errMess) {\n        return(\n            <h4>{errMess}</h4>\n        );\n    }\n    else\n        return(\n            <FadeTransform in \n                transformProps={{\n                    exitTransform: 'scale(0.5) translateY(-50%)'\n                }}>\n                    <Card>\n                        <CardImg src={baseUrl + item.image} alt={item.name} />\n                        <CardBody>\n                            <CardTitle>{item.name}</CardTitle>\n                            {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null }\n                            <CardText>{item.description}</CardText>\n                        </CardBody>\n                    </Card>\n            </FadeTransform>\n        );\n\n}\n\nfunction Home(props) {\n    return(\n        <div className=\"container\">\n            <div className=\"row align-items-start\">\n                <div className=\"col-12 col-md m-1\">\n                    <RenderCard item={props.dish} \n                        isLoading={props.dishesLoading}\n                        errMess={props.dishesErrMess}    \n                    />\n                </div>\n                <div className=\"col-12 col-md m-1\">\n                    <RenderCard item={props.promotion}\n                        isLoading={props.promosLoading}\n                        errMess={props.promosErrMess} \n                    />\n                </div>\n                <div className=\"col-12 col-md m-1\">\n                    <RenderCard item={props.leader} \n                        isLoading={props.leadersLoading}\n                        errMess={props.leadersErrMess}\n                    />\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Home;","import React from 'react';\nimport { Card, CardImg, CardImgOverlay, CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Loading } from './LoadingComponent';\nimport { baseUrl } from '../shared/baseUrl';\n\nfunction RenderMenuItem({dish, onClick}) {                      //Method1 of defining a Functional Component\n    return (\n        <Card>\n            <Link to={`/menu/${dish.id}`}>\n                <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name}/>\n                <CardImgOverlay>\n                    <CardTitle>\n                        {dish.name}\n                    </CardTitle>\n                </CardImgOverlay>\n            </Link>\n        </Card> \n    );\n}\n\nconst Menu = (props) => {                                       //Method2 of defining of a Functional Component\n\n    const menu = props.dishes.dishes.map( (dish) => {\n        return (\n            <div key={dish.id} className=\"col-12 col-md-5 m-1\">\n                <RenderMenuItem dish={dish} />\n            </div>\n        );\n    });\n\n    if (props.dishes.isLoading) {\n        return(\n            <div className=\"container\">\n                <div className=\"row\">            \n                    <Loading />\n                </div>\n            </div>\n        );\n    }\n    else if (props.dishes.errMess) {\n        return(\n            <div className=\"container\">\n                <div className=\"row\"> \n                    <div className=\"col-12\">\n                        <h4>{props.dishes.errMess}</h4>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n    else\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Breadcrumb>\n                        <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\n                        <BreadcrumbItem active>Menu</BreadcrumbItem>\n                    </Breadcrumb>\n                    <div className=\"col-12\">\n                        <h3>Menu</h3>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    {menu}\n                </div>\n            </div>\n        );\n}   \n        \n\nexport default Menu;","import React, { Component } from 'react';\nimport { Breadcrumb, BreadcrumbItem, Button, Label, Col, Row } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Control, Form, Errors } from 'react-redux-form';\n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\nconst minLength = (len) => (val) => val && (val.length >= len);\nconst isNumber = (val) => !isNaN(Number(val));\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\n\nclass Contact extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleSubmit(values) {\n        // console.log('Current State is: ' + JSON.stringify(values));\n        // alert('Current State is: ' + JSON.stringify(values));\n        this.props.postFeedback(values);\n        this.props.resetFeedbackForm();\n    }\n\n    render() {\n\n        return(\n            <div className=\"container\">\n                <div className=\"row\">\n                        <Breadcrumb>\n                            <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\n                            <BreadcrumbItem active>Contact Us</BreadcrumbItem>\n                        </Breadcrumb>\n                        <div className=\"col-12\">\n                            <h3>Contact Us</h3>\n                        </div>\n                    </div>\n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                    <h3>Location Information</h3>\n                    </div>\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\n                            <h5>Our Address</h5>\n                            <address>\n                            121, Clear Water Bay Road<br />\n                            Clear Water Bay, Kowloon<br />\n                            HONG KONG<br />\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\n                            </address>\n                    </div>\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\n                        <h5>Map of our Location</h5>\n                    </div>\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\n                        <div className=\"btn-group\" role=\"group\">\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\n                            <a role=\"button\" className=\"btn btn-info\" href=\"call\"><i className=\"fa fa-skype\"></i> Skype</a>\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                        <h3>Send us your feedback</h3>\n                    </div>\n                    <div className=\"col-12 col-md-9\">\n                        <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\n                                        placeholder=\"First Name\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\n                                        }}\n                                         />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".firstname\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be greater than 2 characters',\n                                            maxLength: 'Must be 15 characters or less'\n                                        }}\n                                     />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\n                                        placeholder=\"Last Name\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\n                                        }}\n                                         />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".lastname\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be greater than 2 characters',\n                                            maxLength: 'Must be 15 characters or less'\n                                        }}\n                                     />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\n                                        placeholder=\"Tel. Number\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required, minLength: minLength(3), maxLength: maxLength(15), isNumber\n                                        }}\n                                         />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".telnum\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be greater than 2 numbers',\n                                            maxLength: 'Must be 15 numbers or less',\n                                            isNumber: 'Must be a number'\n                                        }}\n                                     />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\n                                        placeholder=\"Email\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required, validEmail\n                                        }}\n                                         />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".email\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required',\n                                            validEmail: 'Invalid Email Address'\n                                        }}\n                                     />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{ size: 6, offset: 2 }}>\n                                    <div className=\"form-check\">\n                                        <Label>\n                                            <Control.checkbox model=\".agree\" name=\"agree\" className=\"form-check-input\" /> {' '}\n                                            <strong>May we contact you?</strong>\n                                        </Label>\n                                    </div>\n                                </Col>\n                                <Col md={{ size: 3, offset: 1 }}>\n                                    <Control.select model=\".contactType\" name=\"contactType\" className=\"form-control\" >\n                                        <option>Tel.</option>\n                                        <option>Email</option>\n                                    </Control.select>\n                                </Col>\n                            </Row>\n\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"feedback\" md={2}>Your feedback</Label>\n                                <Col md={10}>\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\" rows=\"12\" className=\"form-control\" \n                                        validators={{\n                                            required\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".message\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n\n                            <Row className=\"form-group\">\n                                <Col md={{ size: 10, offset: 2 }}>\n                                    <Button type=\"submit\" color=\"primary\">Send feedback</Button>\n                                </Col>\n                            </Row>\n                        </Form>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Contact;","import React from 'react';\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Loading } from './LoadingComponent';\nimport { baseUrl } from '../shared/baseUrl';\nimport { Fade, Stagger } from \"react-animation-components\";\n\n\nfunction RenderLeader({ldr}) {\n    return(\n        <Fade in>\n            <Media>\n                <Media left className=\"mt-3\">\n                    <Media object src={baseUrl + ldr.image} alt={ldr.name} />\n                </Media>\n                <Media body className=\"ml-5 mt-3\">\n                    <Media heading>{ldr.name}</Media>\n                    <p>{ldr.designation}</p>\n                    <p>{ldr.description}</p>\n                </Media>\n            </Media>\n        </Fade>\n    );\n}\n\n\nfunction About(props) {\n\n    const leaders = props.leaders.leaders.map((leader) => {\n        return (\n            <div key={leader.id} className=\"col-12 m-1\">\n                <RenderLeader key={leader.id} ldr={leader} />\n            </div>\n        );\n    });\n\n    function RenderLeaders() {\n        if (props.leaders.isLoading) {\n            return <Loading />;\n        }\n        else if (props.leaders.errMess) {\n            return (\n                <h4>{props.leaders.errMess}</h4>\n            );\n        }\n        else return (\n            <Media list>\n                <Stagger in>\n                    {leaders}\n                </Stagger>\n            </Media>   \n            );\n    }\n\n    return(\n        <div className=\"container\">\n            <div className=\"row\">\n                <Breadcrumb>\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\n                </Breadcrumb>\n                <div className=\"col-12\">\n                    <h3>About Us</h3>\n                    <hr />\n                </div>                \n            </div>\n            <div className=\"row row-content\">\n                <div className=\"col-12 col-md-6\">\n                    <h2>Our History</h2>\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\n                </div>\n                <div className=\"col-12 col-md-5\">\n                    <Card>\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\n                        <CardBody>\n                            <dl className=\"row p-1\">\n                                <dt className=\"col-6\">Started</dt>\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\n                                <dt className=\"col-6\">Major Stake Holder</dt>\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\n                                <dd className=\"col-6\">$1,250,375</dd>\n                                <dt className=\"col-6\">Employees</dt>\n                                <dd className=\"col-6\">40</dd>\n                            </dl>\n                        </CardBody>\n                    </Card>\n                </div>\n                <div className=\"col-12\">\n                    <Card>\n                        <CardBody className=\"bg-faded\">\n                            <blockquote className=\"blockquote\">\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\n                                    I'm not hungry enough to eat six.</p>\n                                <footer className=\"blockquote-footer\">Yogi Berra,\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\n                                    P. Pepe, Diversion Books, 2014</cite>\n                                </footer>\n                            </blockquote>\n                        </CardBody>\n                    </Card>\n                </div>\n            </div>\n            <div className=\"row row-content\">\n                <div className=\"col-12\">\n                    <h2>Corporate Leadership</h2>\n                </div>\n                <div className=\"col-12\">\n                    <Media list>\n                        <RenderLeaders />\n                    </Media>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default About;    ","import React, { Component } from 'react';\nimport { Card, CardImg, CardText, CardBody, CardTitle, Breadcrumb, BreadcrumbItem, Button, Modal, ModalHeader, ModalBody, Label, Col, Row } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Control, LocalForm, Errors } from 'react-redux-form';\nimport { Loading } from './LoadingComponent';\nimport { baseUrl } from '../shared/baseUrl';\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\nconst minLength = (len) => (val) => val && (val.length >= len);\n\n\nclass CommentForm extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isModalOpen: false,\n        };\n        this.toggleModal = this.toggleModal.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    toggleModal() {\n        this.setState({\n            isModalOpen: !this.state.isModalOpen\n        });\n    }\n\n    handleSubmit(values) {\n        this.toggleModal();\n        // console.log('Current State is: ' + JSON.stringify(values));\n        // alert('Current State is: ' + JSON.stringify(values));\n        this.props.postComment(this.props.dishId, values.rating, values.name, values.comment)\n    }\n\n    render() {\n\n        return (\n            <>\n            <Button color=\"outline-secondary\" value=\"submitComment\" onClick={this.toggleModal}><span className=\"fa fa-pencil fa-lg\"></span> Submit Comment </Button>\n            <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal} >\n                <ModalHeader isOpen={this.state.isModalOpen} toggle={this.toggleModal}> Submit Comment </ModalHeader>\n                <ModalBody>\n                <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\n                    <Row className=\"form-group\">\n                        <Label htmlFor=\"rating\" md={10}>Rating</Label>\n                        <Col md={12}>\n                            <Control.select model=\".rating\" id=\"rating\" name=\"rating\"\n                                className=\"form-control\" >\n                                    <option value=\"1\">1</option>\n                                    <option value=\"2\">2</option>\n                                    <option value=\"3\">3</option>\n                                    <option value=\"4\">4</option>\n                                    <option value=\"5\">5</option>\n                            </Control.select>                            \n                        </Col>\n                    </Row>\n                    <Row className=\"form-group\">\n                        <Label htmlFor=\"name\" md={10}>Your Name</Label>\n                        <Col md={12}>\n                            <Control.text model=\".name\" id=\"name\" name=\"name\"\n                                placeholder=\"Your Name\" \n                                className=\"form-control\"\n                                validators={{\n                                    required, minLength: minLength(3), maxLength: maxLength(15)\n                                }} \n                            />\n                            <Errors\n                                className=\"text-danger\"\n                                model=\".name\"\n                                show=\"touched\"\n                                messages={{\n                                    required: 'Required',\n                                    minLength: 'Must be greater than 2 numbers',\n                                    maxLength: 'Must be 15 numbers or less'\n                                }}\n                            />                            \n                        </Col>\n                    </Row>\n                    <Row className=\"form-group\">\n                        <Label htmlFor=\"comment\" md={10}>Comment</Label>\n                        <Col md={12}>\n                            <Control.textarea rows=\"6\" model=\".comment\" id=\"comment\" name=\"comment\" \n                                className=\"form-control\"\n                            />                            \n                        </Col>\n                    </Row>\n                    <Row className=\"form-group\">\n                        <Col>\n                            <Button type=\"submit\" color=\"primary\">Submit</Button>\n                        </Col>\n                    </Row>\n                </LocalForm>\n                </ModalBody>\n            </Modal>\n            </>\n        );\n    }\n}\n\n\nfunction RenderComments({comments, postComment, dishId}) {\n    if(comments == null) {\n        return(\n            <div></div>\n        );\n    }\n    const cmnts = comments.map( comment => {\n        return (\n            <div className=\"container\">\n                <Fade in>\n                    <li key={comment.id}>\n                        <p>{comment.comment}</p>\n                        <p>--{comment.author},\n                            &nbsp;\n                            {\n                                new Intl.DateTimeFormat('en-US', {\n                                    year: 'numeric',\n                                    month: 'long',\n                                    day: '2-digit'\n                                }).format(new Date(Date.parse(comment.date)))\n                            }\n                        </p>\n                    </li>\n                </Fade>\n            </div>\n        );\n    })\n\n    return (\n        <div className=\"col-12 col-md-5 m-1\">\n            <h4>Comments</h4>\n            <ul className='list-unstyled'>\n                <Stagger in>\n                    {cmnts}\n                </Stagger>\n            </ul>\n            <CommentForm dishId={dishId} postComment={postComment} />\n        </div>\n    );\n}\n\nfunction RenderDish({dish}) {\n    if(dish == null) {\n        return (\n            <div></div>\n        );\n    }\n\n    return (\n        <div className='col-12 col-md-5 m-1'>\n            <FadeTransform in \n                transformProps={{\n                    exitTransform: 'scale(0.5) translateY(-50%)'\n                }}>\n                    <Card>\n                        <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\n                        <CardBody>\n                            <CardTitle>{dish.name}</CardTitle>\n                            <CardText>{dish.description}</CardText>\n                        </CardBody>\n                    </Card>\n            </FadeTransform>\n        </div>\n    );\n}\n\nconst DishDetail = (props) => {\n\n    if(props.isLoading) {\n        return(\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Loading />\n                </div>\n            </div>\n        );\n    }\n    else if (props.errMess) {\n        return(\n            <div className=\"container\">\n                <div className=\"row\">            \n                    <h4>{props.errMess}</h4>\n                </div>\n            </div>\n        );\n    }\n    else if(props.dish != null)\n        return(\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Breadcrumb>\n                        <BreadcrumbItem><Link to='/menu'>Menu</Link></BreadcrumbItem>\n                        <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\n                    </Breadcrumb>\n                    <div className=\"col-12\">\n                        <h3>{props.dish.name}</h3>\n                    </div>\n                </div>\n                <div className=\"row\">\n                <RenderDish dish={props.dish} />\n                <RenderComments comments={props.comments} \n                    postComment={props.postComment}\n                    dishId={props.dish.id}\n                />\n                </div>\n            </div>\n        );\n        else\n            return(<div></div>);\n\n}\n\n\nexport default DishDetail;","import React, { Component } from 'react';\nimport { Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem, Jumbotron, \n    Button, Modal, ModalHeader, ModalBody, Form, Label, FormGroup, Input } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\n\n\nclass Header extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isNavOpen: false,\n            isModalOpen: false,\n        };\n        this.toggleNav = this.toggleNav.bind(this);\n        this.toggleModal = this.toggleModal.bind(this);\n        this.handleLogin = this.handleLogin.bind(this);\n    }\n\n    toggleNav() {\n        this.setState({\n            isNavOpen: !this.state.isNavOpen\n        });\n    }\n\n    toggleModal() {\n        this.setState({\n            isModalOpen: !this.state.isModalOpen\n        });\n    }\n\n    handleLogin(event) {\n        this.toggleModal();\n        alert(\"Username: \" + this.username.value + \" Password: \" + this.password.value\n            + \" Remember: \" + this.remember.checked);\n        event.preventDefault();\n\n    }\n\n    render() {\n        return(\n            <>\n                <Navbar dark expand=\"md\">\n                    <div className=\"container\">\n                        <NavbarToggler onClick={this.toggleNav} />\n                        <NavbarBrand className=\"mr-auto\" href=\"/\">\n                            <img src=\"/assets/images/logo.png\" height=\"30\" width=\"41\" alt=\"Ristorante Con Fusion\" />                        \n                        </NavbarBrand>\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\n                            <Nav navbar>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to=\"/home\">\n                                        <span className=\"fa fa-home fa-lg\"></span> Home\n                                    </NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to=\"/aboutus\">\n                                        <span className=\"fa fa-info fa-lg\"></span> About Us\n                                    </NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to=\"/menu\">\n                                        <span className=\"fa fa-list fa-lg\"></span> Menu\n                                    </NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to=\"/contactus\">\n                                        <span className=\"fa fa-address-card fa-lg\"></span> Contact Us\n                                    </NavLink>\n                                </NavItem>\n                            </Nav>\n                            <Nav className=\"ml-auto\" navbar>\n                                <NavItem>\n                                    <Button outline onClick={this.toggleModal}>\n                                        <span className=\"fa fa-sign-in fa-lg\">Login</span>\n                                    </Button>\n                                </NavItem>\n                            </Nav>\n                        </Collapse>\n                    </div>\n                </Navbar>\n                <Jumbotron>\n                    <div className=\"container\">\n                        <div className=\"row row-header\">\n                            <div className=\"col-12 col-sm-6\">\n                                <h1>Ristorante Con Fusion</h1>\n                                <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\n                            </div>\n                        </div>\n                    </div>\n                </Jumbotron>\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal} >\n                    <ModalHeader isOpen={this.state.isModalOpen} toggle={this.toggleModal}>Login</ModalHeader>\n                    <ModalBody>\n                        <Form onSubmit={this.handleLogin}>\n                            <FormGroup>\n                                <Label htmlFor=\"username\">Username</Label>\n                                <Input type=\"text\" id=\"username\" \n                                innerRef={(input => this.username = input)} />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label htmlFor=\"password\">Password</Label>\n                                <Input type=\"password\" id=\"password\" \n                                innerRef={(input => this.password = input)} />\n                            </FormGroup>\n                            <FormGroup check>\n                                <Label check>\n                                    <Input type=\"checkbox\" name=\"remember\" \n                                    innerRef={(input => this.remember = input)} />\n                                    Remember Me\n                                </Label>\n                            </FormGroup>\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\n                        </Form>\n                    </ModalBody>\n                </Modal>\n            </>\n        );\n    }\n}\n\nexport default Header;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction Footer(props) {\n    return(\n        <div className=\"footer\">\n            <div className=\"container\">\n                <div className=\"row justify-content-center\">             \n                    <div className=\"col-4 offset-1 col-sm-2\">\n                        <h5>Links</h5>\n                        <ul className=\"list-unstyled\">\n                            <li><Link to=\"/home\">Home</Link></li>\n                            <li><Link to=\"/aboutus\">About Us</Link></li>\n                            <li><Link to=\"/menu\">Menu</Link></li>\n                            <li><Link to=\"/contactus\">Contact Us</Link></li>\n                        </ul>\n                    </div>\n                    <div className=\"col-7 col-sm-5\">\n                        <h5>Our Address</h5>\n                        <address>\n                        121, Clear Water Bay Road<br />\n                        Clear Water Bay, Kowloon<br />\n                        HONG KONG<br />\n                        <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\n                        <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\n                        <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\n                            confusion@food.net</a>\n                        </address>\n                    </div>\n                    <div className=\"col-12 col-sm-4 align-self-center\">\n                        <div className=\"text-center\">\n                            <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\n                            <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\n                            <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\n                            <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\n                            <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\n                            <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row justify-content-center\">             \n                    <div className=\"col-auto\">\n                        <p>© Copyright 2018 Ristorante Con Fusion</p>\n                    </div>\n                </div>\n            </div>\n        </div>  \n    );\n}\n\nexport default Footer;","import * as ActionTypes from './ActionTypes';\nimport { baseUrl } from '../shared/baseUrl';\n\n\nexport const addComment = (comment) => ({\n    type: ActionTypes.ADD_COMMENT,\n    payload: comment\n});\n\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\n    const newComment = {\n        dishId: dishId,\n        rating: rating,\n        author: author,\n        comment: comment\n    };\n    newComment.date = new Date().toISOString();\n    \n    return fetch(baseUrl + 'comments', {\n        method: \"POST\",\n        body: JSON.stringify(newComment),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        credentials: \"same-origin\"\n    })\n    .then(response => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\n          error.response = response;\n          throw error;\n        }\n      },\n      error => {\n            throw error;\n      })\n    .then(response => response.json())\n    .then(response => dispatch(addComment(response)))\n    .catch(error =>  { console.log('post comments', error.message); alert('Your comment could not be posted\\nError: '+error.message); })\n}\n\nexport const fetchDishes = () => (dispatch) => {\n    dispatch(dishesLoading(true));\n\n    return fetch(baseUrl + 'dishes')\n        .then(response => {\n            if(response.ok) {\n                return response;\n            }\n            else {\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\n                error.response = response;\n                throw error;\n            }\n        },\n        error => {\n            var errmess = new Error(error.message);\n            throw errmess;\n        })\n        .then(response => response.json())\n        .then(dishes => dispatch(addDishes(dishes)))\n        .catch(error => dispatch(dishesFailed(error.message)));\n}\n\nexport const dishesLoading = () => ({\n    type: ActionTypes.DISHES_LOADING\n});\n\nexport const dishesFailed = (errmess) => ({\n    type: ActionTypes.DISHES_FAILED,\n    payload: errmess\n});\n\nexport const addDishes = (dishes) => ({\n    type: ActionTypes.ADD_DISHES,\n    payload: dishes\n}); \n\nexport const fetchComments = () => (dispatch) => {\n    return fetch(baseUrl + 'comments')\n        .then(response => {\n            if (response.ok) {\n            return response;\n            } else {\n            var error = new Error('Error ' + response.status + ': ' + response.statusText);\n            error.response = response;\n            throw error;\n            }\n        },\n        error => {\n                var errmess = new Error(error.message);\n                throw errmess;\n        })\n        .then(response => response.json())\n        .then(comments => dispatch(addComments(comments)))\n        .catch(error => dispatch(commentsFailed(error.message)));\n}\n\nexport const commentsFailed = (errmess) => ({\n    type: ActionTypes.COMMENTS_FAILED,\n    payload: errmess\n});\n\nexport const addComments = (comments) => ({\n    type: ActionTypes.ADD_COMMENTS,\n    payload: comments\n});\n\n\nexport const fetchPromos = () => (dispatch) => {\n    \n    dispatch(promosLoading());\n\n    return fetch(baseUrl + 'promotions')\n        .then(response => {\n            if (response.ok) {\n            return response;\n            } else {\n            var error = new Error('Error ' + response.status + ': ' + response.statusText);\n            error.response = response;\n            throw error;\n            }\n        },\n        error => {\n                var errmess = new Error(error.message);\n                throw errmess;\n        })\n        .then(response => response.json())\n        .then(promos => dispatch(addPromos(promos)))\n        .catch(error => dispatch(promosFailed(error.message)));\n\n}\n\nexport const promosLoading = () => ({\n    type: ActionTypes.PROMOS_LOADING\n});\n\nexport const promosFailed = (errmess) => ({\n    type: ActionTypes.PROMOS_FAILED,\n    payload: errmess\n});\n\nexport const addPromos = (promos) => ({\n    type: ActionTypes.ADD_PROMOS,\n    payload: promos\n});\n\n\nexport const fetchLeaders = () => (dispatch) => {\n    \n    dispatch(leadersLoading(true));\n\n    return fetch(baseUrl + 'leaders')\n        .then(response => {\n            if (response.ok) {\n            return response;\n            } else {\n            var error = new Error('Error ' + response.status + ': ' + response.statusText);\n            error.response = response;\n            throw error;\n            }\n        },\n        error => {\n                var errmess = new Error(error.message);\n                throw errmess;\n        })\n        .then(response => response.json())\n        .then(leaders => dispatch(addLeaders(leaders)))\n        .catch(error => dispatch(leadersFailed(error.message)));\n\n}\n\nexport const leadersLoading = () => (dispatch) => ({\n    type: ActionTypes.LEADERS_LOADING\n});\n\nexport const leadersFailed = (errmess) => ({\n    type: ActionTypes.LEADERS_FAILED,\n    payload: errmess\n});\n\nexport const addLeaders = (leaders) => ({\n    type: ActionTypes.ADD_LEADERS,\n    payload:leaders\n});\n\n\n// export const addFeedback = (feedback) => ({\n//     type: ActionTypes.ADD_FEEDBACK,\n//     payload: feedback\n// });\n\nexport const postFeedback = (feedback) => (dispatch) => {\n    const newFeedback = Object.assign({ date: new Date().toISOString() }, feedback);\n    \n    return fetch(baseUrl + 'feedback', {\n        method: \"POST\",\n        body: JSON.stringify(newFeedback),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        credentials: \"same-origin\"\n    })\n    .then(response => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\n          error.response = response;\n          throw error;\n        }\n      },\n      error => {\n            throw error;\n      })\n    .then(response => response.json())\n    .then(response => {\n        // dispatch(addFeedback(response))\n        alert('Thankyou for your feedback!\\n'+JSON.stringify(response));\n        })\n    .catch(error =>  { console.log('post feedback', error.message);\n        alert('Your feedback could not be posted\\nError: '+error.message); })\n}","export const ADD_COMMENT = 'ADD_COMMENT';\nexport const DISHES_LOADING = 'DISHES_LOADING';\nexport const DISHES_FAILED = 'DISHES_FAILED';\nexport const ADD_DISHES = 'ADD_DISHES';\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\nexport const ADD_PROMOS = 'ADD_PROMOS';\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\nexport const LEADERS_LOADING = 'LEADERS_LOADING';\nexport const LEADERS_FAILED = 'LEADERS_FAILED';\nexport const ADD_LEADERS = 'ADD_LEADERS';\n// export const ADD_FEEDBACK = 'ADD_FEEDBACK';","import React, { Component } from 'react';\nimport Home from './HomeComponent';\nimport Menu from './MenuComponent';\nimport Contact from './ContactComponent';\nimport About from './AboutComponent';\nimport DishDetail from './DishdetailComponent';\nimport Header from './HeaderComponent';\nimport Footer from './FooterComponent';\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { postComment, fetchDishes, fetchComments, fetchPromos, fetchLeaders, postFeedback } from '../redux/ActionCreators';\nimport { actions } from 'react-redux-form';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\n\n\nconst mapStateToProps = state => {\n    return {\n      dishes: state.dishes,\n      comments: state.comments,\n      promotions: state.promotions,\n      leaders: state.leaders\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  postComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\n  fetchDishes: () => {dispatch(fetchDishes())},\n  resetFeedbackForm: () => { dispatch(actions.reset('feedback')) },\n  fetchComments: () => {dispatch(fetchComments())},\n  fetchPromos: () => {dispatch(fetchPromos())},\n  fetchLeaders: () => {dispatch(fetchLeaders())},\n  postFeedback: (feedback) => dispatch(postFeedback(feedback))\n});\n\nclass Main extends Component {\n\n  componentDidMount() {\n    this.props.fetchDishes();\n    this.props.fetchComments();\n    this.props.fetchPromos();\n    this.props.fetchLeaders();\n  }\n\n  render() {\n\n    const HomePage = () => {\n      return(\n        <Home \n          dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\n          dishesLoading={this.props.dishes.isLoading}\n          dishesErrMess={this.props.dishes.errMess}\n          promotion={this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\n          promosLoading={this.props.promotions.isLoading}\n          promosErrMess={this.props.promotions.errMess}\n          leader={this.props.leaders.leaders.filter((leader) => leader.featured)[0]}\n          leadersLoading={this.props.leaders.isLoading}\n          leadersErrMess={this.props.leaders.errMess}\n        />\n      );\n    }\n\n    const DishWithId = ({match}) => {\n      return(\n        <DishDetail dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId,10))[0]}\n          isLoading={this.props.dishes.isLoading}\n          errMess={this.props.dishes.errMess}\n          comments={this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId,10))}\n          commentsErrMess={this.props.comments.errMess}\n          postComment={this.props.postComment}\n        />\n      );\n    }\n\n    return (\n      <div>\n          <Header />\n          <TransitionGroup>\n            <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\n              <Switch>\n                <Route path=\"/home\" component={HomePage} />\n                <Route exact path=\"/menu\" component={() => <Menu dishes={this.props.dishes} />} />\n                <Route path=\"/menu/:dishId\" component={DishWithId} />\n                <Route exact path=\"/contactus\" component={() => <Contact resetFeedbackForm={this.props.resetFeedbackForm} postFeedback={this.props.postFeedback} /> } />\n                <Route path=\"/aboutus\" component={() => <About leaders={this.props.leaders} />} />\n                {/* <Redirect to=\"/home\" /> */}\n              </Switch>\n            </CSSTransition>\n          </TransitionGroup>\n          <Footer />\n      </div>\n    );\n  }  \n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));\n","import * as ActionTypes from './ActionTypes';\n\n\nexport const Dishes = (state = {\n        isLoading: true,\n        errMess: null,\n        dishes: []\n    }, action) => {\n    switch(action.type) {\n        case ActionTypes.ADD_DISHES:\n            return {...state, isLoading: false, errMess: null, dishes: action.payload};\n\n        case ActionTypes.DISHES_LOADING:\n            return {...state, isLoading: true, errMess: null, dishes: []}\n\n        case ActionTypes.DISHES_FAILED:\n            return {...state, isLoading: false, errMess: action.payload, dishes: []};\n\n        default:\n            return state;\n    }\n}","import * as ActionTypes from './ActionTypes';\n\n\nexport const Comments = (state = {\n    errMess: null,\n    comments: []\n}, action) => {\n    switch(action.type) {\n        case ActionTypes.ADD_COMMENTS:\n            return {...state, isLoading: false, errMess: null, comments: action.payload};\n\n        case ActionTypes.COMMENTS_FAILED:\n            return {...state, isLoading: false, errMess: action.payload, comments: []};\n\n        case ActionTypes.ADD_COMMENT:\n            var comment = action.payload;\n            return {...state, comments: state.comments.concat(comment)};                                   \n\n        default:\n            return state;\n    }\n}","import * as ActionTypes from './ActionTypes';\n\n\nexport const Promotions = (state = {\n        isLoading: true,\n        errMess: null,\n        promotions: []\n    }, action) => {\n    switch(action.type) {\n        case ActionTypes.ADD_PROMOS:\n            return {...state, isLoading: false, errMess: null, promotions: action.payload};\n\n        case ActionTypes.PROMOS_LOADING:\n            return {...state, isLoading: true, errMess: null, promotions: []}\n\n        case ActionTypes.PROMOS_FAILED:\n            return {...state, isLoading: false, errMess: action.payload, promotions: []};\n\n        default:\n            return state;\n    }\n}","import * as ActionTypes from './ActionTypes';\n\n\nexport const Leaders = (state = {\n        isLoading: true,\n        errMess: null,\n        leaders: []\n    }, action) => {\n    switch(action.type) {\n        case ActionTypes.ADD_LEADERS:\n            return {...state, isLoading: false, errMess: null, leaders: action.payload};\n\n        case ActionTypes.LEADERS_LOADING:\n            return {...state, isLoading: true, errMess: null, leaders: []}\n\n        case ActionTypes.LEADERS_FAILED:\n            return {...state, isLoading: false, errMess: action.payload, leaders: []};\n\n        default:\n            return state;\n    }\n}","export const InitialFeedback = {\n    firstname: '',\n    lastname: '',\n    telnum: '',\n    email: '',\n    agree: false,\n    contactType: 'Tel.',\n    message: ''\n}","import React, { Component } from 'react';\nimport Main from './components/MainComponent';\nimport './App.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport  { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore';\n\n\nconst store = ConfigureStore();\n\nclass App extends Component {\n\n  render() {\n    return (\n      <Provider store={store}>\n        <BrowserRouter>\n          <div>\n            <Main/>\n          </div>\n        </BrowserRouter>\n      </Provider>\n    );\n  }  \n}\n\nexport default App;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { createForms } from 'react-redux-form';\nimport { Dishes } from './dishes';\nimport { Comments } from './comments';\nimport { Promotions } from './promotions';\nimport { Leaders } from './leaders';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\nimport { InitialFeedback } from './forms';\n\nexport const ConfigureStore = () => {\n    const store = createStore(\n        combineReducers({\n            dishes: Dishes,\n            comments: Comments,\n            promotions: Promotions,\n            leaders: Leaders,\n            ...createForms({\n                feedback: InitialFeedback\n            })\n        }),\n        applyMiddleware(thunk, logger)\n    );\n\n    return store;\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}